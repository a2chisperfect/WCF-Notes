//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Notes.NotesServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Server.Model")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Note", Namespace="http://schemas.datacontract.org/2004/07/Server.Model")]
    [System.SerializableAttribute()]
    public partial class Note : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NotesServiceReference.ILoginService")]
    public interface ILoginService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/Register", ReplyAction="http://tempuri.org/ILoginService/RegisterResponse")]
        bool Register(string username, string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/Register", ReplyAction="http://tempuri.org/ILoginService/RegisterResponse")]
        System.Threading.Tasks.Task<bool> RegisterAsync(string username, string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/Login", ReplyAction="http://tempuri.org/ILoginService/LoginResponse")]
        Notes.NotesServiceReference.User Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/Login", ReplyAction="http://tempuri.org/ILoginService/LoginResponse")]
        System.Threading.Tasks.Task<Notes.NotesServiceReference.User> LoginAsync(string username, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILoginServiceChannel : Notes.NotesServiceReference.ILoginService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginServiceClient : System.ServiceModel.ClientBase<Notes.NotesServiceReference.ILoginService>, Notes.NotesServiceReference.ILoginService {
        
        public LoginServiceClient() {
        }
        
        public LoginServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoginServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Register(string username, string password, string email) {
            return base.Channel.Register(username, password, email);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterAsync(string username, string password, string email) {
            return base.Channel.RegisterAsync(username, password, email);
        }
        
        public Notes.NotesServiceReference.User Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<Notes.NotesServiceReference.User> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NotesServiceReference.INotesDataService")]
    public interface INotesDataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotesDataService/GetLastNotesByCount", ReplyAction="http://tempuri.org/INotesDataService/GetLastNotesByCountResponse", Name = "GetLastNotesByCount")]
        System.Collections.ObjectModel.ObservableCollection<Notes.NotesServiceReference.Note> GetLastNotes(int count, System.Guid userId);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/INotesDataService/GetLastNotesByCount", ReplyAction = "http://tempuri.org/INotesDataService/GetLastNotesByCountResponse", Name = "GetLastNotesByCount")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Notes.NotesServiceReference.Note>> GetLastNotesAsync(int count, System.Guid userId);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/INotesDataService/GetLastNotesByDate", ReplyAction = "http://tempuri.org/INotesDataService/GetLastNotesByDateResponse", Name = "GetLastNotesByDate")]
        System.Collections.ObjectModel.ObservableCollection<Notes.NotesServiceReference.Note> GetLastNotes(System.DateTime from, System.DateTime to, System.Guid userId);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/INotesDataService/GetLastNotesByDate", ReplyAction = "http://tempuri.org/INotesDataService/GetLastNotesByDateResponse", Name = "GetLastNotesByDate")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Notes.NotesServiceReference.Note>> GetLastNotesAsync(System.DateTime from, System.DateTime to, System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotesDataService/AddNote", ReplyAction="http://tempuri.org/INotesDataService/AddNoteResponse")]
        System.Guid AddNote(Notes.NotesServiceReference.Note note, System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotesDataService/AddNote", ReplyAction="http://tempuri.org/INotesDataService/AddNoteResponse")]
        System.Threading.Tasks.Task<System.Guid> AddNoteAsync(Notes.NotesServiceReference.Note note, System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotesDataService/DeleteNote", ReplyAction="http://tempuri.org/INotesDataService/DeleteNoteResponse")]
        void DeleteNote(System.Guid idNote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotesDataService/DeleteNote", ReplyAction="http://tempuri.org/INotesDataService/DeleteNoteResponse")]
        System.Threading.Tasks.Task DeleteNoteAsync(System.Guid idNote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotesDataService/EditNote", ReplyAction="http://tempuri.org/INotesDataService/EditNoteResponse")]
        void EditNote(Notes.NotesServiceReference.Note note);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotesDataService/EditNote", ReplyAction="http://tempuri.org/INotesDataService/EditNoteResponse")]
        System.Threading.Tasks.Task EditNoteAsync(Notes.NotesServiceReference.Note note);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INotesDataServiceChannel : Notes.NotesServiceReference.INotesDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NotesDataServiceClient : System.ServiceModel.ClientBase<Notes.NotesServiceReference.INotesDataService>, Notes.NotesServiceReference.INotesDataService {
        
        public NotesDataServiceClient() {
        }
        
        public NotesDataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NotesDataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NotesDataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NotesDataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Notes.NotesServiceReference.Note> GetLastNotes(int count, System.Guid userId) {
            return base.Channel.GetLastNotes(count, userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Notes.NotesServiceReference.Note>> GetLastNotesAsync(int count, System.Guid userId) {
            return base.Channel.GetLastNotesAsync(count, userId);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Notes.NotesServiceReference.Note> GetLastNotes(System.DateTime from, System.DateTime to, System.Guid userId) {
            return base.Channel.GetLastNotes(from, to, userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Notes.NotesServiceReference.Note>> GetLastNotesAsync(System.DateTime from, System.DateTime to, System.Guid userId) {
            return base.Channel.GetLastNotesAsync(from, to, userId);
        }
        
        public System.Guid AddNote(Notes.NotesServiceReference.Note note, System.Guid userId) {
            return base.Channel.AddNote(note, userId);
        }
        
        public System.Threading.Tasks.Task<System.Guid> AddNoteAsync(Notes.NotesServiceReference.Note note, System.Guid userId) {
            return base.Channel.AddNoteAsync(note, userId);
        }
        
        public void DeleteNote(System.Guid idNote) {
            base.Channel.DeleteNote(idNote);
        }
        
        public System.Threading.Tasks.Task DeleteNoteAsync(System.Guid idNote) {
            return base.Channel.DeleteNoteAsync(idNote);
        }
        
        public void EditNote(Notes.NotesServiceReference.Note note) {
            base.Channel.EditNote(note);
        }
        
        public System.Threading.Tasks.Task EditNoteAsync(Notes.NotesServiceReference.Note note) {
            return base.Channel.EditNoteAsync(note);
        }
    }
}
